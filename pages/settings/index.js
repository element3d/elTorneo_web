import Head from 'next/head';
import { useEffect, useState } from 'react';
import { Inter } from 'next/font/google';
import styles from '@/styles/Lang.module.css';
import { useRouter } from 'next/router';
import { SERVER_BASE_URL } from '@/js/Config';
import AppBar from '@/js/AppBar';

import BottomNavBar, { EPAGE_CAL } from '@/js/BottomNavBar';

import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import { useTranslation } from 'next-i18next';
import Cookies from 'js-cookie';
const inter = Inter({ subsets: ['latin'] });

export async function getServerSideProps(context) {
    const { query } = context;
    const { locale } = context;

    const { req } = context

    const token = req.cookies.token;
    if (!token) {
        return {
            redirect: {
                destination: '/login',
                permanent: false, // This indicates that the redirect is temporary
            },
        };
    }

    const requestOptions = {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'Authentication': token
        },
    };

    const user = await fetch(`${SERVER_BASE_URL}/api/v1/me`, requestOptions)
        .then(response => {
            if (response.status === 200) return response.json();
            return null;
        });

    return {
        props: {
            locale,
            me: user,
            ...(await serverSideTranslations(locale)),
        },
    };
}

export default function Home({ me, locale }) {
    const router = useRouter()
    const [name, setName] = useState(me.name)
    const { t } = useTranslation()
    const isTg = localStorage.getItem('is_tg')

    function onNameChange(e) {
        setName(e.target.value)
    }

    function onLogout() {
        Cookies.remove('token')
        router.push('/')
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${styles.main} ${inter.className}`}>
                <AppBar title={'el Torneo'} router={router} />
                <div className={styles.ava_panel}>
                    <div className={styles.ava_cont}>
                        {me.avatar.length ? <img src={`${SERVER_BASE_URL}/${me.avatar}`} />
                            : <img className={styles.ava_blank} src={`${SERVER_BASE_URL}/data/icons/profile_blank.svg`} />}
                    </div>
                    <button className={styles.mini_button} style={{ left: '-8px' }}>
                    </button>
                    <button className={styles.mini_button} style={{ right: '-8px' }}>
                    </button>
                </div>

                <div className={styles.padding}>
                    <input className={styles.input} type='text' value={name} onChange={onNameChange} />
                    <span className={styles.email}>{me.email}</span>

                    {!isTg ? <>
                        <button className={styles.text_button} onClick={onLogout}>{t('signout')}</button>
                        <button className={styles.text_button}>{t('delete_acc')}</button>
                    </> : null}
                </div>

                <BottomNavBar router={router} page={EPAGE_CAL} />
            </main>
        </>
    );
}
